rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    

    
    // Helper function to check if user can write (admin but not read-only)
    function canWrite() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isReadOnly != true;
    }
    
    // Helper function to check if user belongs to company
    function belongsToCompany(companyId) {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.companyId == companyId;
    }
    

    
    // Helper function to check if user is personal AI account
    function isPersonalAIAccount() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.accountType == 'personal';
    }
    
    // Helper function to check if user is WebVault account
    function hasWebVaultAccess() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.platforms.webvault.access == true;
    }
    
    // USERS
    match /users/{userId} {
      // Users can read/write their own document
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Admins can read all user documents, but only non-read-only admins can write
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    
    // COMPANIES
    match /companies/{companyId} {
      // Company owner can read/write their own company
      allow read, write: if request.auth != null && belongsToCompany(companyId);
      // Admins can read/write all companies
      allow read: if isAdmin();
      allow write: if isAdmin();
      // Anyone can read approved companies
      allow read: if resource.data.approvalStatus == 'approved';
    }
    
    // COMPANY APPROVALS - Special collection for approval management
    match /companyApprovals/{approvalId} {
      allow read, write: if canWrite();
      allow read: if isAdmin();
    }
    
    // NOTIFICATIONS - Admin users can read/write their own notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow read, write: if isAdmin();
    }
    
    // CHATBOTS
    match /chatbots/{chatbotId} {
      // Users can read/write their own chatbots
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Company members can read/write their company's chatbots
      allow read, write: if request.auth != null && 
        belongsToCompany(resource.data.companyId);
      // Admins can read all chatbots, but only non-read-only admins can write
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    
    // CONVERSATIONS
    match /conversations/{conversationId} {
      // Users can read/write their own conversations
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Company members can read/write their company's conversations
      allow read, write: if request.auth != null && 
        belongsToCompany(resource.data.companyId);
      // Admins can read all conversations, but only non-read-only admins can write
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    
    // SUBSCRIPTIONS
    match /subscriptions/{subscriptionId} {
      // Users can read/write their own subscriptions
      allow read, write: if request.auth != null && 
        request.auth.uid == subscriptionId;
      // Company members can read/write their company's subscriptions
      allow read, write: if request.auth != null && 
        belongsToCompany(resource.data.companyId);
      // Admins can read all subscriptions, but only non-read-only admins can write
      allow read: if isAdmin();
      allow write: if isAdmin();
    }
    
    // WEBSITE REQUESTS - New collection for website development requests
    match /websiteRequests/{requestId} {
      // Allow anyone to create website requests (for public form submissions)
      allow create: if true;
      // Users can read/write their own website requests
      allow read, write: if request.auth != null && 
        (resource.data.userId == request.auth.uid || resource.data.submittedBy == request.auth.uid);
      // WebVault users can read all requests (for service providers)
      allow read: if hasWebVaultAccess();
      // Admins can read/write all website requests
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // WEBSITES - New collection for managed websites
    match /websites/{websiteId} {
      // Users can read/write their own websites
      allow read, write: if request.auth != null && 
        resource.data.ownerId == request.auth.uid;
      // Company members can read/write their company's websites
      allow read, write: if request.auth != null && 
        belongsToCompany(resource.data.companyId);
      // WebVault users can read all websites (for service providers)
      allow read: if hasWebVaultAccess();
      // Admins can read/write all websites
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // SERVICES - New collection for web development services
    match /services/{serviceId} {
      // Users can read/write their own services
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Company members can read/write their company's services
      allow read, write: if request.auth != null && 
        belongsToCompany(resource.data.companyId);
      // WebVault users can read all services
      allow read: if hasWebVaultAccess();
      // Admins can read/write all services
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // PERSONAL AI ASSISTANTS - New collection for personal AI data
    match /personalAI/{assistantId} {
      // Users can read/write their own personal AI assistants
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Personal AI account users can read/write their assistants
      allow read, write: if isPersonalAIAccount();
      // Admins can read/write all personal AI assistants
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // PERSONAL AI INTERACTIONS - New collection for personal AI interaction logs
    match /personalAIInteractions/{interactionId} {
      // Users can read/write their own interactions
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Personal AI account users can read/write their interactions
      allow read, write: if isPersonalAIAccount();
      // Admins can read all interactions
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // RATE LIMITS - New collection for API rate limiting
    match /rateLimits/{ipAddress} {
      // Only admins can read/write rate limit data
      allow read, write: if isAdmin();
    }
    
    // ANALYTICS - Only admins can access analytics data
    match /analytics/{document} {
      allow read, write: if isAdmin();
    }
    
    // SETTINGS - Company-specific settings
    match /settings/{settingId} {
      // Company members can read/write their company's settings
      allow read, write: if request.auth != null && 
        belongsToCompany(resource.data.companyId);
      // Admins can read/write all settings
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // SYSTEM SETTINGS - Allow authenticated users to read, but only admins can write
    match /systemSettings/{document} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // SECURITY SETTINGS - Only non-read-only admins can write
    match /securitySettings/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // NOTIFICATION SETTINGS - Only non-read-only admins can write
    match /notificationSettings/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // PLATFORM SETTINGS - Only non-read-only admins can write
    match /platformSettings/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // MAINTENANCE SETTINGS - Only admins can access
    match /maintenanceSettings/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // FEATURE TOGGLES - Only admins can access
    match /featureToggles/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // LIMITS AND QUOTAS - Only admins can access
    match /limitsAndQuotas/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // ACCESS CONTROL - Only admins can access
    match /accessControl/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // SYSTEM PREFERENCES - Only admins can access
    match /systemPreferences/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // PLATFORM CONFIG - Only admins can access
    match /platformConfig/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // SYSTEM ANNOUNCEMENTS - Only admins can write, everyone can read
    match /systemAnnouncements/{document} {
      allow read: if request.auth != null;
      allow write: if canWrite();
    }
    
    // BACKUP DATA - Only admins can access
    match /backupData/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // DELETED COMPANIES - Only admins can access
    match /deleted_companies/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // DELETED USERS - Only admins can access
    match /deleted_users/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // AUDIT LOGS - Only admins can access
    match /auditLogs/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // PERFORMANCE METRICS - Only admins can access
    match /performanceMetrics/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // ERROR LOGS - Only admins can access
    match /errorLogs/{document} {
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // CONSULTATION REQUESTS - New collection for consultation bookings
    match /consultationRequests/{requestId} {
      // Users can read/write their own consultation requests
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Company members can read/write their company's consultation requests
      allow read, write: if request.auth != null && 
        belongsToCompany(resource.data.companyId);
      // Admins can read/write all consultation requests
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // CHATBOT ANALYTICS - Platform-specific analytics
    match /chatbotAnalytics/{document} {
      // Users can read their own chatbot analytics
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Company members can read their company's chatbot analytics
      allow read: if request.auth != null && 
        belongsToCompany(resource.data.companyId);
      // Admins can read all chatbot analytics
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // WEBVAULT ANALYTICS - Platform-specific analytics
    match /webvaultAnalytics/{document} {
      // Users can read their own webvault analytics
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Company members can read their company's webvault analytics
      allow read: if request.auth != null && 
        belongsToCompany(resource.data.companyId);
      // WebVault users can read all webvault analytics
      allow read: if hasWebVaultAccess();
      // Admins can read all webvault analytics
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // PERSONAL AI ANALYTICS - Platform-specific analytics
    match /personalAIAnalytics/{document} {
      // Users can read their own personal AI analytics
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Personal AI account users can read their analytics
      allow read: if isPersonalAIAccount();
      // Admins can read all personal AI analytics
      allow read: if isAdmin();
      allow write: if canWrite();
    }
    
    // SERVICE REQUESTS - New collection for service approval workflow
    match /serviceRequests/{requestId} {
      // Users can read/write their own service requests
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      // Company members can read/write their company's service requests
      allow read, write: if request.auth != null && 
        belongsToCompany(resource.data.companyId);
      // WebVault users can read all service requests (for service providers)
      allow read: if hasWebVaultAccess();
      // Admins can read/write all service requests
      allow read: if isAdmin();
      allow write: if canWrite();
    }
  }
} 